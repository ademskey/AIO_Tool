# -*- coding: utf-8 -*-
"""AIO_Tool.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1zf1ju2AAkDG15rkGdqhHsfmbpoDr4aZl
"""

#!pip install ultralytics
#!pip install roboflow

from roboflow import Roboflow
from ultralytics import YOLO
#https://github.com/ultralytics/JSON2YOLO
#https://docs.ultralytics.com/datasets/segment/#supported-datasets

# download our dataset from Roboflow in COCO format

rf = Roboflow(api_key="aLekBnOIW0WqCpUVZqGZ")
project = rf.workspace("envoy").project("aio_seg")
version = project.version(7)
dataset = version.download("yolov8-obb")

path_to_yaml = "AIO_seg-7/data.yaml"

# Load a model
model = YOLO("yolo11n-seg.yaml")  # build a new model from YAML
model = YOLO("yolo11n-seg.pt")  # load a pretrained model (recommended for training)
model = YOLO("yolo11n-seg.yaml").load("yolo11n.pt")  # build from YAML and transfer weights

# Train the model with verbose output
results = model.train(
    data=path_to_yaml,
    epochs=25,
    imgsz=640,
    verbose=True,        # enables detailed training logs
    show=True,           # shows images & predictions during training (in notebook/GUI)
    plots=True,          # saves loss curves and performance plots
    save=True,           # saves training checkpoints
    save_period=1        # save checkpoint every epoch
)

model = YOLO("runs/segment/train2/weights/last.pt")
# Train the model with verbose output
results = model.train(
    data=path_to_yaml,
    epochs=100,
    imgsz=640,
    verbose=True,        # enables detailed training logs
    show=True,           # shows images & predictions during training (in notebook/GUI)
    plots=True,          # saves loss curves and performance plots
    save=True,           # saves training checkpoints
    save_period=1        # save checkpoint every epoch
)

